{"version":3,"sources":["webpack:///./node_modules/react-in-viewport/dist/es/index.js","webpack:///./node_modules/intersection-observer/intersection-observer.js","webpack:///./node_modules/@material-ui/core/esm/ListItemText/ListItemText.js"],"names":["exports","__esModule","default","obj","_react","newObj","key","Object","prototype","hasOwnProperty","call","desc","defineProperty","getOwnPropertyDescriptor","get","set","_interopRequireWildcard","require","_reactDom","_hoistNonReactStatics","_extends","assign","target","i","arguments","length","source","apply","this","window","isStateless","TargetComponent","isReactComponent","_default","options","config","disconnectOnLeave","InViewport","_react$Component","props","_this","observer","node","state","inViewport","enterCount","leaveCount","intersected","handleIntersection","bind","_assertThisInitialized","initIntersectionObserver","setInnerRef","setRef","_inheritsLoose","_proto","componentDidMount","startObserver","componentDidUpdate","prevProps","prevState","unobserve","observe","IntersectionObserver","componentWillUnmount","stopObserver","disconnect","entries","_this$props","onEnterViewport","onLeaveViewport","entry","isIntersecting","intersectionRatio","setState","findDOMNode","render","_this$props2","otherProps","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","_this$state","refProps","innerRef","ref","createElement","Component","document","IntersectionObserverEntry","registry","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","_observationTargets","some","item","element","nodeType","Error","_registerInstance","push","_monitorIntersections","_checkForIntersections","filter","_unmonitorIntersections","_unregisterInstance","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","threshold","Array","isArray","sort","t","a","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","exec","value","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","addEvent","_domObserver","MutationObserver","attributes","childList","characterData","subtree","clearInterval","removeEvent","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","top","bottom","left","right","width","height","forEach","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","time","performance","now","boundingClientRect","rootBounds","_hasCrossedThreshold","_callback","getComputedStyle","display","rect1","rect2","parent","getParentNode","atRoot","parentRect","parentComputedStyle","root","body","documentElement","overflow","Math","max","min","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","index","splice","targetArea","intersectionArea","Number","toFixed","callback","opt_options","fn","timeout","timer","setTimeout","rootMargin","join","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","el","err","child","parentNode","host","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_Typography__WEBPACK_IMPORTED_MODULE_6__","_List_ListContext__WEBPACK_IMPORTED_MODULE_7__","ListItemText","React","forwardRef","children","classes","className","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","other","_objectWithoutProperties","dense","useContext","ListContext","type","Typography","variant","component","color","clsx","multiline","withStyles","flex","minWidth","marginTop","marginBottom","paddingLeft","name"],"mappings":"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","file":"7-05a4340176ced7c447d3.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _hoistNonReactStatics = _interopRequireDefault(require(\"hoist-non-react-statics\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nif (typeof window !== 'undefined') {\n  // Polyfills for intersection-observer\n  require('intersection-observer'); // eslint-disable-line\n\n}\n\nconst isStateless = TargetComponent => typeof TargetComponent === 'function' && !(TargetComponent.prototype && TargetComponent.prototype.isReactComponent);\n\nfunction handleViewport(TargetComponent, options, config) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (config === void 0) {\n    config = {\n      disconnectOnLeave: false\n    };\n  }\n\n  class InViewport extends _react.Component {\n    constructor(props) {\n      super(props);\n      this.observer = null;\n      this.node = null;\n      this.state = {\n        inViewport: false,\n        enterCount: 0,\n        leaveCount: 0\n      };\n      this.intersected = false;\n      this.handleIntersection = this.handleIntersection.bind(this);\n      this.initIntersectionObserver = this.initIntersectionObserver.bind(this);\n      this.setInnerRef = this.setInnerRef.bind(this);\n      this.setRef = this.setRef.bind(this);\n    }\n\n    componentDidMount() {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      this.initIntersectionObserver();\n      this.startObserver(this.node, this.observer);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      // reset observer on update, to fix race condition that when observer init,\n      // the element is not in viewport, such as in animation\n      if (!this.intersected && !prevState.inViewport) {\n        if (this.observer && this.node) {\n          this.observer.unobserve(this.node); // $FlowFixMe\n\n          this.observer.observe(this.node);\n        }\n      }\n    }\n\n    initIntersectionObserver() {\n      if (!this.observer) {\n        // $FlowFixMe\n        this.observer = new IntersectionObserver(this.handleIntersection, options);\n      }\n    }\n\n    componentWillUnmount() {\n      this.stopObserver(this.node, this.observer);\n    }\n\n    startObserver(node, observer) {\n      if (node && observer) {\n        observer.observe(node);\n      }\n    }\n\n    stopObserver(node, observer) {\n      if (node && observer) {\n        observer.unobserve(node);\n        observer.disconnect();\n        this.observer = null;\n      }\n    }\n\n    handleIntersection(entries) {\n      const _this$props = this.props,\n            onEnterViewport = _this$props.onEnterViewport,\n            onLeaveViewport = _this$props.onLeaveViewport;\n      const entry = entries[0] || {};\n      const isIntersecting = entry.isIntersecting,\n            intersectionRatio = entry.intersectionRatio;\n      const inViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0; // enter\n\n      if (!this.intersected && inViewport) {\n        this.intersected = true;\n        onEnterViewport && onEnterViewport();\n        this.setState({\n          inViewport,\n          enterCount: this.state.enterCount + 1\n        });\n        return;\n      } // leave\n\n\n      if (this.intersected && !inViewport) {\n        this.intersected = false;\n        onLeaveViewport && onLeaveViewport();\n\n        if (config.disconnectOnLeave) {\n          // disconnect obsever on leave\n          this.observer && this.observer.disconnect();\n        }\n\n        this.setState({\n          inViewport,\n          leaveCount: this.state.leaveCount + 1\n        });\n      }\n    }\n\n    setRef(node) {\n      // $FlowFixMe\n      this.node = (0, _reactDom.findDOMNode)(node);\n    }\n\n    setInnerRef(node) {\n      if (node && !this.node) {\n        // handle stateless\n        this.node = node;\n      }\n    }\n\n    render() {\n      const _this$props2 = this.props,\n            onEnterViewport = _this$props2.onEnterViewport,\n            onLeaveViewport = _this$props2.onLeaveViewport,\n            otherProps = _objectWithoutPropertiesLoose(_this$props2, [\"onEnterViewport\", \"onLeaveViewport\"]); // pass ref to class and innerRef for stateless component\n\n\n      const _this$state = this.state,\n            inViewport = _this$state.inViewport,\n            enterCount = _this$state.enterCount,\n            leaveCount = _this$state.leaveCount;\n      const refProps = isStateless(TargetComponent) ? {\n        innerRef: this.setInnerRef\n      } : {\n        ref: this.setRef\n      };\n      return (// $FlowFixMe\n        _react.default.createElement(TargetComponent, _extends({}, otherProps, {\n          inViewport: inViewport,\n          enterCount: enterCount,\n          leaveCount: leaveCount\n        }, refProps))\n      );\n    }\n\n  }\n\n  return (0, _hoistNonReactStatics.default)(InViewport, TargetComponent);\n}\n\nvar _default = handleViewport;\nexports.default = _default;","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  /**\n   * Alias for the `primary` property.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);"],"sourceRoot":""}