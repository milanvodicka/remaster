{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/colors/grey.js","webpack:///./node_modules/react-in-viewport/dist/es/index.js","webpack:///./node_modules/intersection-observer/intersection-observer.js"],"names":["Object","defineProperty","exports","value","default","_default","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","__esModule","obj","_react","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","_interopRequireWildcard","require","_reactDom","_hoistNonReactStatics","_extends","assign","target","i","arguments","length","source","apply","this","window","isStateless","TargetComponent","isReactComponent","options","config","disconnectOnLeave","InViewport","_react$Component","props","_this","observer","node","state","inViewport","enterCount","leaveCount","intersected","handleIntersection","bind","_assertThisInitialized","initIntersectionObserver","setInnerRef","setRef","_inheritsLoose","_proto","componentDidMount","startObserver","componentDidUpdate","prevProps","prevState","unobserve","observe","IntersectionObserver","componentWillUnmount","stopObserver","disconnect","entries","_this$props","onEnterViewport","onLeaveViewport","entry","isIntersecting","intersectionRatio","setState","findDOMNode","render","_this$props2","otherProps","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","_this$state","refProps","innerRef","ref","createElement","Component","document","IntersectionObserverEntry","registry","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","_observationTargets","some","item","element","nodeType","Error","_registerInstance","push","_monitorIntersections","_checkForIntersections","filter","_unmonitorIntersections","_unregisterInstance","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","threshold","Array","isArray","sort","t","a","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","exec","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","addEvent","_domObserver","MutationObserver","attributes","childList","characterData","subtree","clearInterval","removeEvent","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","top","bottom","left","right","width","height","forEach","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","time","performance","now","boundingClientRect","rootBounds","_hasCrossedThreshold","_callback","getComputedStyle","display","rect1","rect2","parent","getParentNode","atRoot","parentRect","parentComputedStyle","root","body","documentElement","overflow","Math","max","min","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","index","splice","targetArea","intersectionArea","Number","toFixed","callback","opt_options","fn","timeout","timer","setTimeout","rootMargin","join","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","el","err","child","parentNode","host"],"mappings":"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","file":"2-68b06083e706a7d38197.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar grey = {\n  50: '#fafafa',\n  100: '#f5f5f5',\n  200: '#eeeeee',\n  300: '#e0e0e0',\n  400: '#bdbdbd',\n  500: '#9e9e9e',\n  600: '#757575',\n  700: '#616161',\n  800: '#424242',\n  900: '#212121',\n  A100: '#d5d5d5',\n  A200: '#aaaaaa',\n  A400: '#303030',\n  A700: '#616161'\n};\nvar _default = grey;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _hoistNonReactStatics = _interopRequireDefault(require(\"hoist-non-react-statics\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nif (typeof window !== 'undefined') {\n  // Polyfills for intersection-observer\n  require('intersection-observer'); // eslint-disable-line\n\n}\n\nconst isStateless = TargetComponent => typeof TargetComponent === 'function' && !(TargetComponent.prototype && TargetComponent.prototype.isReactComponent);\n\nfunction handleViewport(TargetComponent, options, config) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (config === void 0) {\n    config = {\n      disconnectOnLeave: false\n    };\n  }\n\n  class InViewport extends _react.Component {\n    constructor(props) {\n      super(props);\n      this.observer = null;\n      this.node = null;\n      this.state = {\n        inViewport: false,\n        enterCount: 0,\n        leaveCount: 0\n      };\n      this.intersected = false;\n      this.handleIntersection = this.handleIntersection.bind(this);\n      this.initIntersectionObserver = this.initIntersectionObserver.bind(this);\n      this.setInnerRef = this.setInnerRef.bind(this);\n      this.setRef = this.setRef.bind(this);\n    }\n\n    componentDidMount() {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      this.initIntersectionObserver();\n      this.startObserver(this.node, this.observer);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      // reset observer on update, to fix race condition that when observer init,\n      // the element is not in viewport, such as in animation\n      if (!this.intersected && !prevState.inViewport) {\n        if (this.observer && this.node) {\n          this.observer.unobserve(this.node); // $FlowFixMe\n\n          this.observer.observe(this.node);\n        }\n      }\n    }\n\n    initIntersectionObserver() {\n      if (!this.observer) {\n        // $FlowFixMe\n        this.observer = new IntersectionObserver(this.handleIntersection, options);\n      }\n    }\n\n    componentWillUnmount() {\n      this.stopObserver(this.node, this.observer);\n    }\n\n    startObserver(node, observer) {\n      if (node && observer) {\n        observer.observe(node);\n      }\n    }\n\n    stopObserver(node, observer) {\n      if (node && observer) {\n        observer.unobserve(node);\n        observer.disconnect();\n        this.observer = null;\n      }\n    }\n\n    handleIntersection(entries) {\n      const _this$props = this.props,\n            onEnterViewport = _this$props.onEnterViewport,\n            onLeaveViewport = _this$props.onLeaveViewport;\n      const entry = entries[0] || {};\n      const isIntersecting = entry.isIntersecting,\n            intersectionRatio = entry.intersectionRatio;\n      const inViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0; // enter\n\n      if (!this.intersected && inViewport) {\n        this.intersected = true;\n        onEnterViewport && onEnterViewport();\n        this.setState({\n          inViewport,\n          enterCount: this.state.enterCount + 1\n        });\n        return;\n      } // leave\n\n\n      if (this.intersected && !inViewport) {\n        this.intersected = false;\n        onLeaveViewport && onLeaveViewport();\n\n        if (config.disconnectOnLeave) {\n          // disconnect obsever on leave\n          this.observer && this.observer.disconnect();\n        }\n\n        this.setState({\n          inViewport,\n          leaveCount: this.state.leaveCount + 1\n        });\n      }\n    }\n\n    setRef(node) {\n      // $FlowFixMe\n      this.node = (0, _reactDom.findDOMNode)(node);\n    }\n\n    setInnerRef(node) {\n      if (node && !this.node) {\n        // handle stateless\n        this.node = node;\n      }\n    }\n\n    render() {\n      const _this$props2 = this.props,\n            onEnterViewport = _this$props2.onEnterViewport,\n            onLeaveViewport = _this$props2.onLeaveViewport,\n            otherProps = _objectWithoutPropertiesLoose(_this$props2, [\"onEnterViewport\", \"onLeaveViewport\"]); // pass ref to class and innerRef for stateless component\n\n\n      const _this$state = this.state,\n            inViewport = _this$state.inViewport,\n            enterCount = _this$state.enterCount,\n            leaveCount = _this$state.leaveCount;\n      const refProps = isStateless(TargetComponent) ? {\n        innerRef: this.setInnerRef\n      } : {\n        ref: this.setRef\n      };\n      return (// $FlowFixMe\n        _react.default.createElement(TargetComponent, _extends({}, otherProps, {\n          inViewport: inViewport,\n          enterCount: enterCount,\n          leaveCount: leaveCount\n        }, refProps))\n      );\n    }\n\n  }\n\n  return (0, _hoistNonReactStatics.default)(InViewport, TargetComponent);\n}\n\nvar _default = handleViewport;\nexports.default = _default;","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n"],"sourceRoot":""}